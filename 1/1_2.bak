#lang racket

(define (in-numbers s) (sequence-map string->number s))

(define-values (larger-count _)
  (call-with-input-file "day_1_input.txt"
    (lambda (in)
      (for/fold
       ([sum 0] [previous-value +inf.0])
       ([(current-value i) (in-indexed (in-numbers (in-lines in)))])
        (values
         (+ sum (if (> current-value previous-value) 1 0))
         current-value)))))

(printf "day 1, part 1: ~a" larger-count)